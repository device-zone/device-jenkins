#!/bin/bash

if [ $# -eq 3 ]; then

  instance="${1}"
  virtualhost="${2}"

  line=/etc/device/services/app/jenkins

  if test ! -f "$line/virtualhost.d/listen.d/instance.d/name.txt" -o "${instance}" != "$(head -n 1 $line/virtualhost.d/listen.d/instance.d/name.txt)"; then
    exit 0;
  fi
  if test ! -f "$line/virtualhost.d/name.txt" -o "${virtualhost}" != "$(head -n 1 $line/virtualhost.d/name.txt)"; then
    exit 0;
  fi
  if test ! -f "$line/port.txt"; then
    exit 0;
  fi
  virtualhost="$(head -n 1 ${line}/virtualhost.d/name.txt)"
  application="jenkins"
  port="$(head -n 1 ${line}/port.txt)"

  # read in the path if present
  path=""
  if test -f "${line}/path.txt"; then
    path="$(head -n 1 ${line}/path.txt)"
  fi
  # empty path becomes a /
  if test -z "${path}";then
    path="/"
  fi

  # read in the server-name if present
  servername=""
  if test -f "${line}/virtualhost.d/server-name.txt"; then
    servername="$(head -n 1 ${line}/virtualhost.d/server-name.txt)"
  fi
  # empty servername becomes hostname
  if test -z "${servername}";then
    servername=$(hostname -f)
  fi

  # read in the tlsport if present
  tlsport=""
  if test -f "${line}/virtualhost.d/listen.d/tls-port.txt"; then
    tlsport="$(head -n 1 ${line}/virtualhost.d/listen.d/tls-port.txt)"
  fi
  # empty tls-port becomes 443
  if test -z "${tlsport}";then
    tlsport="443"
  fi

  # read auth if present
  authname=""
  if test -f "$line/auth.d/name.txt"; then
    authname="$(head -n 1 $line/auth.d/name.txt)"
  fi

  # access url if present
  access_url=""
  access_text=""
  if test -f "$line/access-url.txt"; then
    access_url="$(head -n 1 ${line}/access-url.txt)"
    if test -n "${access_url}"; then
      access_text=" To request access, <a href='$(echo ${access_url} | recode ..html)'>click here</a>."
    fi
  fi

# jwt if present
#if test -f "/var/lib/tomcats/jenkins-${application}/conf/jwt-secret.txt"; then
#  install -m 640 "/var/lib/tomcats/jenkins-${application}/conf/jwt-secret.txt" "/run/httpd/instance-device-${instance}/jwt-secret-jenkins-${application}.txt"
#fi

  cat > "location.conf" <<- EOF
# Generated by $0 on `date`
# DO NOT MODIFY THIS FILE - it will be overwritten on server restart.
#

<IfModule !authz_core_module>
  LoadModule authz_core_module modules/mod_authz_core.so
</IfModule>
<IfModule !headers_module>
  LoadModule headers_module modules/mod_headers.so
</IfModule>
<IfModule !proxy_module>
  LoadModule proxy_module modules/mod_proxy.so
</IfModule>
<IfModule !proxy_http_module>
  LoadModule proxy_http_module modules/mod_proxy_http.so
</IfModule>

# jenkins configured from ${line}/path.txt

<Location ${path}>

#  ProxyPass unix:///run/tomcat-jenkins-${application}/socket|http://localhost${path}
#  ProxyPassReverse unix:///run/tomcat-jenkins-${application}/socket|http://localhost${path}

  ProxyPass unix:///run/jenkins/jenkins.socket|http://localhost${path} nocanon
  ProxyPassReverse unix:///run/jenkins/jenkins.socket|http://localhost${path}

  ProxyPreserveHost On
#  AllowEncodedSlashes NoDecode

  RequestHeader set X-Forwarded-Proto "https"
  RequestHeader set X-Forwarded-Host "${servername}"
  RequestHeader set X-Forwarded-Port "${tlsport}"

  AuthzSendForbiddenOnFailure on

EOF

  if test -n "${authname}"; then
    cat >> "location.conf" <<- EOF
  <If "%{SSL_CLIENT_VERIFY} == 'SUCCESS' || %{SSL_CLIENT_VERIFY} == 'GENEROUS'">

    SSLUserName SSL_CLIENT_CERT_RFC4523_CEA

    require device-tls-${authname}

    ErrorDocument 403 "<html><head><title>403 Forbidden</title></head><body><h1>Forbidden</h1><p>Your gadget '%{SSL_CLIENT_S_DN_CN}' currently does not have permission to access this URL.${access_text}</p></body></html>"

    AuthBearerProxy %{JWT_TOKEN}
    AuthtJwtClaim set aud jenkins
    AuthtJwtClaim set iss apache
    AuthtJwtClaim set sub %{REMOTE_USER}
    AuthtJwtClaim set groups apache
    AuthtJwtClaim set alg none
#    AuthtJwtClaim set alg HS256
#    AuthtJwtSign hs256 file "/run/httpd/instance-device-${instance}/jwt-secret-jenkins-${application}.txt"

  </If>
  <Else>
    require all denied

    ErrorDocument 403 "<html><head><title>403 Forbidden</title></head><body><h1>Forbidden</h1><p>A digital certificate is required to access this URL, but none was provided. Did you click cancel?${access_text}</p></body></html>"

  </Else>

EOF
  else
    cat >> "location.conf" <<- EOF
  # no authname specified, so access is granted
  require all granted

EOF
  fi

  cat >> "location.conf" <<- EOF
</Location>
EOF

  install "location.conf" "/etc/httpd/conf.device.d/instance/${instance}/secure-${virtualhost}.d/location-$(echo ${path} | tr [:cntrl:][:punct:] _).conf"

fi

